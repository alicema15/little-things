:coffeescript
  console.log "coffeescript is running"
  $ -> 
    initMap = (my_lat, my_lng) ->
      # Styles a map in night mode.
      console.log "map is running"
      console.log my_lat
      map = new (google.maps.Map)(document.getElementById('map'),
        center:
          lat: 13.16822
          lng: -158.05023
        zoom: 19
        styles: [
          {
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#1d2c4d"
              }
            ]
          },
          {
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#8ec3b9"
              }
            ]
          },
          {
            "elementType": "labels.text.stroke",
            "stylers": [
              {
                "color": "#1a3646"
              }
            ]
          },
          {
            "featureType": "administrative.country",
            "elementType": "geometry.stroke",
            "stylers": [
              {
                "color": "#4b6878"
              }
            ]
          },
          {
            "featureType": "administrative.land_parcel",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#64779e"
              }
            ]
          },
          {
            "featureType": "administrative.neighborhood",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "administrative.province",
            "elementType": "geometry.stroke",
            "stylers": [
              {
                "color": "#4b6878"
              }
            ]
          },
          {
            "featureType": "landscape.man_made",
            "elementType": "geometry.stroke",
            "stylers": [
              {
                "color": "#334e87"
              }
            ]
          },
          {
            "featureType": "landscape.natural",
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#023e58"
              }
            ]
          },
          {
            "featureType": "poi",
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#283d6a"
              }
            ]
          },
          {
            "featureType": "poi",
            "elementType": "labels.text",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "poi",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#6f9ba5"
              }
            ]
          },
          {
            "featureType": "poi",
            "elementType": "labels.text.stroke",
            "stylers": [
              {
                "color": "#1d2c4d"
              }
            ]
          },
          {
            "featureType": "poi.business",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "poi.park",
            "elementType": "geometry.fill",
            "stylers": [
              {
                "color": "#023e58"
              }
            ]
          },
          {
            "featureType": "poi.park",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#3C7680"
              }
            ]
          },
          {
            "featureType": "road",
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#304a7d"
              }
            ]
          },
          {
            "featureType": "road",
            "elementType": "labels",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "road",
            "elementType": "labels.icon",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "road",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#98a5be"
              }
            ]
          },
          {
            "featureType": "road",
            "elementType": "labels.text.stroke",
            "stylers": [
              {
                "color": "#1d2c4d"
              }
            ]
          },
          {
            "featureType": "road.highway",
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#2c6675"
              }
            ]
          },
          {
            "featureType": "road.highway",
            "elementType": "geometry.stroke",
            "stylers": [
              {
                "color": "#255763"
              }
            ]
          },
          {
            "featureType": "road.highway",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#b0d5ce"
              }
            ]
          },
          {
            "featureType": "road.highway",
            "elementType": "labels.text.stroke",
            "stylers": [
              {
                "color": "#023e58"
              }
            ]
          },
          {
            "featureType": "transit",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "transit",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#98a5be"
              }
            ]
          },
          {
            "featureType": "transit",
            "elementType": "labels.text.stroke",
            "stylers": [
              {
                "color": "#1d2c4d"
              }
            ]
          },
          {
            "featureType": "transit.line",
            "elementType": "geometry.fill",
            "stylers": [
              {
                "color": "#283d6a"
              }
            ]
          },
          {
            "featureType": "transit.station",
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#3a4762"
              }
            ]
          },
          {
            "featureType": "water",
            "elementType": "geometry",
            "stylers": [
              {
                "color": "#0e1626"
              },
              {
                "visibility": "on"
              }
            ]
          },
          {
            "featureType": "water",
            "elementType": "labels.text",
            "stylers": [
              {
                "visibility": "off"
              }
            ]
          },
          {
            "featureType": "water",
            "elementType": "labels.text.fill",
            "stylers": [
              {
                "color": "#4e6d70"
              }
            ]
          }
        ])
      
      console.log "is it happening?"
      infoWindow = new (google.maps.InfoWindow)
 
      if navigator.geolocation
        console.log "in navigator.geolocation"
        navigator.geolocation.getCurrentPosition ((position) ->
          console.log "i'm in the navigator.geolocation.getcurrentposition"
          pos = 
            lat: position.coords.latitude
            lng: position.coords.longitude
          infoWindow.setPosition pos
          infoWindow.setContent 'My Location.'
          infoWindow.open map
          map.setCenter pos
          console.log "set position!"
          return
        ), ->
          handleLocationError true, infoWindow, map.getCenter()
          return
      else
        # Browser doesn't support Geolocation
        handleLocationError false, infoWindow, map.getCenter()
      iconBase = 'https://maps.google.com/mapfiles/kml/shapes/'
      icons = 
        parking: icon: iconBase + 'parking_lot_maps.png'
        library: icon: iconBase + 'library_maps.png'
        info: icon: iconBase + 'info-i_maps.png'
      
      features = [
        {
          position: new google.maps.LatLng(my_lat, my_lng), 
          type: 'parking'
        }
      ]
      window.marker_content = contentString = '<div id="content">' + '<div id="siteNotice">' + '</div>' + '<h1 id="firstHeading" class="firstHeading">Uluru</h1>' + '<div id="bodyContent">' + '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' + 'sandstone rock formation in the southern part of the ' + 'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) ' + 'south west of the nearest large town, Alice Springs; 450&#160;km ' + '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major ' + 'features of the Uluru - Kata Tjuta National Park. Uluru is ' + 'sacred to the Pitjantjatjara and Yankunytjatjara, the ' + 'Aboriginal people of the area. It has many springs, waterholes, ' + 'rock caves and ancient paintings. Uluru is listed as a World ' + 'Heritage Site.</p>' + '<p>Attribution: Uluru, <a href="https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194">' + 'https://en.wikipedia.org/w/index.php?title=Uluru</a> ' + '(last visited June 22, 2009).</p>' + '</div>' + '</div>'
      window.seed_window = new (google.maps.InfoWindow)(content: marker_content)

      features.forEach (feature) ->
        my_lat = feature.position.lat()
        my_lng = feature.position.lng()
    
        image = 
          url: "http://developer.helpscout.net/seed/images/seed.png"
          scaledSize: new google.maps.Size(60, 60)
          origin: new google.maps.Point(0, 0)
          anchor: new google.maps.Point(0, 0)
        
        marker = new (google.maps.Marker)(
          position: feature.position
          icon: image
          map: map)
        marker.addListener('click', toggleBounce)
        marker.addListener 'click', ->
          window.seed_window.open map, marker
        console.log("add listener")
      return
    
    toggleBounce = ->
      console.log("do I bounce or what?")
      if this.getAnimation() != null
        this.setAnimation null
      else
        this.setAnimation google.maps.Animation.BOUNCE
      return
    
    handleLocationError = (browserHasGeolocation, infoWindow, pos) ->
      infoWindow.setPosition pos
      infoWindow.setContent if browserHasGeolocation then 'Error: The Geolocation service failed.' else 'Error: Your browser doesn\'t support geolocation.'
      infoWindow.open map
          
    $(window).load ->
      console.log "window loaded"
      console.log initMap
      my_lat = parseFloat($('#lat').val());
      my_lng = parseFloat($('#lng').val());
      map = new initMap(my_lat, my_lng)
      return

%head
  %meta{:content => "initial-scale=1.0, user-scalable=no", :name => "viewport"}

%body
  #map
  %script{:defer => "defer", :src => @customized_map}

  .maps
    = hidden_field_tag :my_token, @center[0], :id => 'lat'
    = hidden_field_tag :my_token, @center[1], :id => 'lng'
    // = image_tag @static_map
    
    // %iframe{:allowfullscreen => "", :frameborder => "0", :height => "300", :src => @dynamic_map, :style => "border:0", :width => "300"}

    // %iframe{:allowfullscreen => "", :frameborder => "0", :height => "300", :src => @customized_map, :style => "border:0", :width => "300"}
