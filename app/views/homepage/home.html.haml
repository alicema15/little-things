:coffeescript
  $ ->
    input = document.querySelector("input")
    console.log input
    #input = $("input" )
    input.style.opacity = 0
  $ ->
    window.features = new Array
    window.seed = false
    if navigator.geolocation
      f = ->
        options = 
          enableHighAccuracy: true
          timeout: 5000
          maximumAge: 0
          desiredAccuracy: 0
          frequency: 1
        onSuccess = (position) ->
          pos = 
            lat: position.coords.latitude
            lng: position.coords.longitude

          Plant = getNearby: ->
            console.log "you're about to make an ajax call"
            $.ajax
              type: 'POST'
              url: 'https://littlethings-alicema15.c9users.io/home/nearby'
              data: JSON.stringify({ 'my_lat' : position.coords.latitude, 'my_long': position.coords.longitude })
              contentType: 'application/json'
              dataType: 'script'
              success: (response_data) ->
                console.log "you got an ajax call working!"
                console.log "This is plant_lat: " + plant_lat
                if plant_lat == ''
                  console.log plant_pic
                  window.seed = null
                  window.seed = false
                else
                  console.log "Should be setting the location status"
                  document.getElementById('location-status').innerHTML = "You are near a seed!"
                return 
              error: (response_data) ->
                console.log "the call is failing"
                return
            false
            return
                
          plant = new Plant.getNearby()  
            
        onError = (error) ->
          alert 'code: ' + error.code + '\n' + 'message: ' + error.message + '\n'
          return
        watchID = navigator.geolocation.watchPosition(onSuccess, onError, options)
        return
      location = new f
    else
      # Browser doesn't support Geolocation
      handleLocationError false, infoWindow, map.getCenter()
    return
  
    handleLocationError = (browserHasGeolocation, infoWindow, pos) ->
      infoWindow.setPosition pos
      infoWindow.setContent if browserHasGeolocation then 'Error: The Geolocation service failed.' else 'Error: Your browser doesn\'t support geolocation.'
      infoWindow.open map
          
    $(window).load ->
      my_lat = parseFloat($('#lat').val());
      my_lng = parseFloat($('#lng').val());
      map = new initMap(my_lat, my_lng)
      return

%div.title  Today, at a cafe near you, a seed was planted
.container
  = form_tag save_seed_path, :method => :post do
    .embed-submit-field
      - if @plant
        %textarea{:cols => "50", :name => "comment", :placeholder => "Plant a seed", :rows => "4"}
        -# match if ends with png
        -# match if ends with mp3/mp4 
        -# then render inside of placeholder
      - else
        %textarea{:cols => "50", :name => "comment", :placeholder => "Plant a seed...", :rows => "4"}
      %button{:type => "submit"} Plant Me!
    %label{:for => "image_uploads"}
      = image_tag "pic.png", :width=> "25%"
      = image_tag "vid.png", :width=> "25%"
      = image_tag "audio.png", :width=> "25%"
    %input#image_uploads{:accept => "audio/*,video/*,image/*", :name => "image_uploads", :type => "file"}/
.container.text-center
  %h2#location-status You're not near a seed
  .btn.btn-lg.btn-info#to-map Plant My Seed
  %h3 This is the seed type of the plant existing here:
  %h4#seed-id
  %h4#location-id
  %h4#seed-type
  %h3 This is the seed type of my new seed:
  %h4#new-seed-type= @seed_type
  %button#plant-seed= button_to "seeeeeds" , plant_seed_path(:location_id => @location_id), {:method => 'post', :class => 'btn btn-sm btn-info'}



:scss
  body {
    background: #85d3f3;
    background-image: url("https://preview.c9users.io/samyuktaraman/final-project/littlethings/app/assets/images/bg.png"); /* fallback */
    background-image: url("https://preview.c9users.io/samyuktaraman/final-project/littlethings/app/assets/images/bg.png"), linear-gradient(#68b0f1, #85d3f3); /* W3C */
    background-size: cover;
    background-position: bottom;
    background-repeat: no-repeat;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    box-sizing: border-box;
    margin-top: 0px;
       
  }
  
  .title{
    width: 35%;
    font-size:20px;
    margin: 0 auto;
    margin-top: 60px;
    text-align: center;  
  }
  
  //Begin template


  * {
    box-sizing: inherit;
  }

  .container {
    width: 80%;
    margin: 0 auto;
    margin-top: 60px;
  }

  .embed-submit-field {
    position: relative;
    
    textarea {
      width: 100%;
      height: 200px;
      padding: 15px;
      border:2px solid #768c21;
      border-color: #768c21;
      background: #f0f4c3;
      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
      
    }
    button {
      position: absolute;
      right: 0px;
      bottom: 3px;
      border-top-left-radius: 2em;
      border: 2px solid #768c21;
      margin-bottom: 2px;
      -webkit-appearance: none;
      -moz-appearance: none;
      
      background: #9cb733;
      padding: 10px;
      
      transition: all .2s;
      
      &:active {
        background-color: #499115;
        color: #fff;
        cursor: pointer;
      }
    }
  }

  
  
// #container
//     #top-half=link_to image_tag("#{@image}"), v1_home_path(:image => @image_next)
//     #bottom-half=link_to image_tag("#{@image}"), v1_home_path(:image => @image_before)
// // IGNORE, BUT KEEP THIS LINE (Back button)   
// = render :partial => "application/back_to_root"

// !!!
// %html
//   %head
//     %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
//     :css
//       input[type=text] {
//           width: 100%;
//           padding: 12px 20px;
//           margin: 8px 0;
//           box-sizing: border-box;
//           border: none;
//           background-color: #3CBC8D;
//           color: white;
//       }
//   %body
//     %form
//       %h2  Today, at a cafe near you a seed was planted
//       %input#fname{:name => "fname", :type => "text",}/
// .row 
//   .col-xs-3
//     = image_tag "text png.png", :width=> "17%", :id=>"system-img"
//     = image_tag "music png.png", :width=> "17%", :id=>"system-img"
//     = image_tag "camera png.png", :width=> "20%", :id=>"system-img"
//     = image_tag "paintbrush-png-13.png", :width=> "17%", :id=>"system-img"
    
// :scss

//   #system-img:hover {
//     width: 23%;
//   }
  
//   h2 {
//     font-family: garamond;
//     font-style: italic;
//   }

// //Begin template
// body {
//   background: #eee;
//   font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
//   box-sizing: border-box;
// }

// * {
//   box-sizing: inherit;
// }

// .container {
//   width: 400px;
//   margin: 0 auto;
// }

// //End template

// .embed-submit-field {
//   position: relative;
  
//   input {
//     width: 100%;
//     height: 200px;
//     padding: 15px;
//     border-style: solid;
//     border-color: green;
//     background: #c5f99f;
    
//   }
//   button {
//     position: absolute;
//     right: 0px;
//     bottom: 0px;
//     border-top-left-radius: 2em;
//     border: 2px solid green;
    
    
//     //Only styling from here, you can discard this
//     -webkit-appearance: none;
//     -moz-appearance: none;
    
//     background: #81d147;
//     padding: 10px;
    
//     transition: all .2s;
    
//     &:active {
//       background-color: #499115;
//       color: #fff;
//       cursor: pointer;
//     }
//   }
// }
